# Enhanced nginx configuration for Olympian AI multi-host deployment
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Enhanced log format for WebSocket debugging
    log_format websocket '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'upgrade="$http_upgrade" connection="$http_connection" '
                        'backend="$upstream_addr" response_time="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Optimized client body settings for image uploads
    client_max_body_size 50M;
    client_body_buffer_size 1M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Disable nginx version in headers
    server_tokens off;
    
    # Map for WebSocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Upstream backend with keepalive and health check
    upstream backend {
        server backend:4000;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Main server block
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Frontend static files
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        # SOCKET.IO WEBSOCKET & POLLING - Critical for real-time communication
        location ~* ^/socket\.io/ {
            # Use separate access log for WebSocket debugging
            access_log /var/log/nginx/websocket.log websocket;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # Essential WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Critical: Disable buffering for real-time WebSocket communication
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            
            # Extended timeouts for streaming chat responses
            proxy_connect_timeout 30s;
            proxy_send_timeout 3600s;    # 1 hour for long conversations
            proxy_read_timeout 3600s;    # 1 hour for long conversations
            
            # WebSocket specific settings
            proxy_redirect off;
            proxy_set_header Access-Control-Allow-Origin *;
            proxy_set_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            proxy_set_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            proxy_set_header Access-Control-Allow-Credentials true;
            
            # Enhanced headers for debugging and multi-host deployment
            add_header X-Olympian-Proxy "websocket" always;
            add_header X-Olympian-Backend "$upstream_addr" always;
            add_header X-Olympian-Response-Time "$upstream_response_time" always;
            add_header X-Olympian-Connection-Upgrade "$connection_upgrade" always;
            add_header X-Olympian-Request-ID "$request_id" always;
            
            # Add CORS headers for preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # PROGRESSIVE LOADING API - Enhanced configuration for long-running model capability detection
        location /api/progressive/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # EXTENDED TIMEOUTS for progressive model capability detection (15 minutes)
            proxy_connect_timeout 30s;
            proxy_send_timeout 900s;    # 15 minutes
            proxy_read_timeout 900s;    # 15 minutes
            
            # Optimized for long-running requests
            proxy_buffering off;        # Disable buffering for real-time updates
            proxy_cache off;           # Disable caching for dynamic content
            proxy_request_buffering off; # Important for Server-Sent Events
            
            # Allow for large responses (model capability data)
            proxy_buffer_size 128k;
            proxy_buffers 16 128k;
            proxy_busy_buffers_size 256k;
            
            # Special headers for SSE (Server-Sent Events) support
            proxy_set_header Cache-Control "no-cache";
            proxy_set_header Connection "keep-alive";
        }
        
        # MODEL CAPABILITY ENDPOINTS - Special handling for capability detection
        location ~* /api/(models|chat)/(capabilities|vision-models) {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # MAXIMUM TIMEOUTS for model capability detection (20 minutes)
            proxy_connect_timeout 30s;
            proxy_send_timeout 1200s;   # 20 minutes
            proxy_read_timeout 1200s;   # 20 minutes
            
            # Optimized buffering for large model capability responses
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 32 16k;
            proxy_busy_buffers_size 32k;
            proxy_temp_file_write_size 32k;
            
            # Request buffering for large capability detection requests
            proxy_request_buffering on;
            
            # Add custom headers to track timeout handling
            add_header X-Olympian-Timeout "1200" always;
            add_header X-Olympian-Endpoint "model-capabilities" always;
        }
        
        # STANDARD API proxy with optimized settings for vision processing
        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for vision processing (10 minutes)
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # Optimized buffering for large requests
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
            proxy_temp_file_write_size 16k;
            
            # Disable proxy request buffering for streaming
            proxy_request_buffering off;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Enhanced health check for model capability detection
        location /health/model-capabilities {
            proxy_pass http://backend/api/progressive/models/capabilities/stats;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Quick timeout for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            access_log off;
        }
        
        # WebSocket debug endpoint with enhanced diagnostics
        location /debug/websocket {
            access_log off;
            return 200 "WebSocket proxy configuration active
Upgrade Header: $http_upgrade
Connection Header: $http_connection
Connection Upgrade Mapping: $connection_upgrade
Backend Server: backend:4000
Request ID: $request_id
Client IP: $remote_addr
User Agent: $http_user_agent
Timestamp: $time_iso8601
";
            add_header Content-Type text/plain;
            add_header X-Olympian-Debug "websocket-config" always;
        }
        
        # New debug endpoint for connection testing
        location /debug/connection {
            access_log off;
            return 200 "Connection Debug Info
Server: $server_name
Host: $host
Remote Address: $remote_addr
X-Forwarded-For: $http_x_forwarded_for
X-Real-IP: $http_x_real_ip
Protocol: $scheme
Request URI: $request_uri
HTTP Version: $server_protocol
Request ID: $request_id
Timestamp: $time_iso8601
";
            add_header Content-Type text/plain;
            add_header X-Olympian-Debug "connection-info" always;
        }
    }
}