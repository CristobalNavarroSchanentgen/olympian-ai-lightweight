# Docker Compose for same-host deployment
# All services (Ollama, MongoDB, MCP) run on the same host but in different containers

services:
  # Frontend with integrated nginx (serves both static files and proxies backend)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: olympian-frontend
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:80"
    environment:
      DEPLOYMENT_MODE: same-host
    depends_on:
      - backend
    networks:
      - olympian-network
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: olympian-backend
    restart: unless-stopped
    environment:
      DEPLOYMENT_MODE: same-host
      MONGODB_URI: mongodb://olympian-mongodb:27017/olympian_ai_lite
      OLLAMA_HOST: http://olympian-ollama:11434
      NODE_ENV: production
      PORT: 4000
      LOG_LEVEL: ${LOG_LEVEL:-info}
      JWT_SECRET: ${JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
    volumes:
      - config-data:/config/.olympian-ai-lite
      - logs:/app/logs
    depends_on:
      - mongodb
      - ollama
    networks:
      - olympian-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  # External services on same host
  mongodb:
    image: mongo:7
    container_name: olympian-mongodb
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_DATABASE: olympian_ai_lite
    networks:
      - olympian-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  ollama:
    image: ollama/ollama:latest
    container_name: olympian-ollama
    restart: unless-stopped
    volumes:
      - ollama-data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - olympian-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Example MCP server
  mcp-filesystem:
    image: node:20-alpine
    container_name: olympian-mcp-filesystem
    restart: unless-stopped
    working_dir: /app
    command: npx -y @modelcontextprotocol/server-filesystem /data
    volumes:
      - mcp-data:/data
    networks:
      - olympian-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000", "||", "exit", "1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  config-data:
  logs:
  mongodb-data:
  ollama-data:
  mcp-data:

networks:
  olympian-network:
    driver: bridge
