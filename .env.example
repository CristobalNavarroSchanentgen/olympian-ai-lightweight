# Olympian AI Lightweight Environment Configuration
# Copy this file to .env and customize for your deployment

# ===================================
# DEPLOYMENT MODE
# ===================================
# Options: 'development', 'docker-same-host', 'docker-multi-host'
DEPLOYMENT_MODE=development

# ===================================
# APPLICATION SETTINGS
# ===================================
# Server configuration
PORT=4000
NODE_ENV=development
LOG_LEVEL=info

# Frontend configuration (for Docker deployments)
APP_PORT=8080

# Client URL (for CORS in development)
CLIENT_URL=http://localhost:3000

# ===================================
# DATABASE CONFIGURATION
# ===================================
# Development: Local MongoDB
MONGODB_URI=mongodb://localhost:27017/olympian_ai_lite

# Docker same-host: Uses container name
# MONGODB_URI=mongodb://olympian-mongodb:27017/olympian_ai_lite

# Docker multi-host: External MongoDB
# MONGODB_URI=mongodb://username:password@192.168.1.10:27017/olympian_ai_lite?authSource=admin

# Optional: MongoDB Replica Set
# MONGODB_REPLICA_SET=rs0

# ===================================
# OLLAMA CONFIGURATION
# ===================================
# Development: Local Ollama
OLLAMA_HOST=http://localhost:11434

# Docker same-host: Uses container name
# OLLAMA_HOST=http://olympian-ollama:11434

# Docker multi-host: External Ollama (ALWAYS include port :11434)
# OLLAMA_HOST=http://192.168.1.11:11434
# OLLAMA_HOST=http://ollama.example.com:11434

# Multiple Ollama instances for load balancing (comma-separated)
# OLLAMA_HOSTS=192.168.1.11:11434,192.168.1.12:11434,192.168.1.13:11434

# Load balancing strategy: round-robin, least-conn, ip-hash
OLLAMA_LOAD_BALANCER=round-robin

# ===================================
# MCP SERVER CONFIGURATION
# ===================================
# Enable MCP server discovery
MCP_DISCOVERY_ENABLED=true

# Known MCP servers (comma-separated) - for multi-host deployments
# MCP_HOSTS=192.168.1.20:8080,192.168.1.21:8080

# ===================================
# SERVICE DISCOVERY (Multi-host only)
# ===================================
# Network subnet to scan for services
SERVICE_DISCOVERY_SUBNET=192.168.1.0/24

# Discovery interval in milliseconds (5 minutes)
SERVICE_DISCOVERY_INTERVAL=300000

# ===================================
# SECURITY
# ===================================
# IMPORTANT: Generate secure keys for production:
# openssl rand -base64 32

JWT_SECRET=your-jwt-secret-key-here-replace-in-production
SESSION_SECRET=your-session-secret-key-here-replace-in-production

# CORS settings (comma-separated origins)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

# ===================================
# DOCKER DNS RESOLUTION (Multi-host only)
# ===================================
# Add custom host entries for DNS resolution inside Docker containers
# Format: - "hostname:ip" (note the leading dash and space)
# Example:
# EXTRA_HOSTS=- "ollama.prd.ihmn.fr:192.168.1.100"
#   - "mongodb.prd.ihmn.fr:192.168.1.101"
#   - "mcp1.local:192.168.1.110"
#   - "mcp2.local:192.168.1.111"
#
# For single host:
# EXTRA_HOSTS=- "ollama.prd.ihmn.fr:192.168.1.100"

# ===================================
# DEVELOPMENT ONLY
# ===================================
# Enable additional debugging in development
DEBUG=olympian:*

# Hot reload settings
CHOKIDAR_USEPOLLING=false

# ===================================
# DOCKER CONFIGURATION EXAMPLES
# ===================================
# Uncomment and modify based on your deployment mode:

# For Docker same-host deployment:
# DEPLOYMENT_MODE=docker-same-host
# MONGODB_URI=mongodb://olympian-mongodb:27017/olympian_ai_lite
# OLLAMA_HOST=http://olympian-ollama:11434

# For Docker multi-host deployment:
# DEPLOYMENT_MODE=docker-multi-host
# MONGODB_URI=mongodb://username:password@your-mongo-host:27017/olympian_ai_lite?authSource=admin
# OLLAMA_HOST=http://your-ollama-host:11434
# MCP_HOSTS=your-mcp-host-1:8080,your-mcp-host-2:8080
# EXTRA_HOSTS=- "your-ollama-host:192.168.1.100"
